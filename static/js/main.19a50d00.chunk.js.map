{"version":3,"sources":["Components/App/App.js","reportWebVitals.js","index.js"],"names":["squares","i","row","j","push","Square","value","handleClick","board","onClick","className","Board","status","useState","whiteIsNext","setBoard","winner","setWinner","calculateWinner","y","x","countContinuousChess","currentX","currentY","directionX","directionY","currentColor","tempX","tempY","length","total","map","rowIndex","column","colIndex","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.19a50d00.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport \"./App.css\"\n\nconst squares = []\nfor(let i = 1; i < 20; i++) {\n  const row = []\n  for(let j = 1; j < 20; j++) {\n    row.push(null)\n  }\n  squares.push(row)\n}\n\n\nfunction Square({ value, board, handleClick}) {\n\n  return (\n    <button\n      onClick={\n        handleClick\n      }\n      className=\"square\"\n    >\n      {value}\n    </button>\n  );\n}\n\nfunction Board() {\n  const [board, setBoard] = useState({\n    squares,\n    whiteIsNext: true\n  })\n\n  const [winner, setWinner] = useState(null)\n\n  let status\n  if (winner) {\n    status = `Winner: ${winner}`\n  } else {\n    status = `Next player:  ${(board.whiteIsNext ? '●' : '○' )}`\n  }\n\n  function handleClick(y, x) {\n    const squares = board.squares\n    if (squares[y][x]) return\n    if (winner) return\n\n    squares[y][x] = board.whiteIsNext ? '●' : '○'\n    setBoard({\n      squares,\n      whiteIsNext: !board.whiteIsNext\n    })\n\n    if (calculateWinner(squares, y, x)) {\n      setWinner(squares[y][x])\n      return\n    }\n  }\n\n  const calculateWinner = (squares, y, x) => {\n    return countContinuousChess(squares, x, y, 1, 0) + countContinuousChess(squares, x, y, -1, 0) >= 4 ||\n      countContinuousChess(squares, x, y, 0, 1) + countContinuousChess(squares, x, y, 0, -1) >=4 ||\n      countContinuousChess(squares, x, y, -1, -1) + countContinuousChess(squares, x, y, 1, 1) >=4 ||\n      countContinuousChess(squares, x, y, 1, -1) + countContinuousChess(squares, x, y, -1, 1) >=4\n  }\n\n  const countContinuousChess = (squares, currentX, currentY, directionX, directionY) => {\n    const currentColor = squares[currentY][currentX]\n    let tempX = currentX + directionX\n    let tempY = currentY + directionY\n    if (tempX < 0) return 0\n    if (tempY < 0) return 0\n    if (tempX > squares.length - 1) return 0\n    if (tempY > squares.length - 1) return 0\n    let total = 0\n    while(squares[tempY][tempX] === currentColor) {\n      total++\n      tempX += directionX\n      tempY += directionY\n      if (tempX < 0) return total\n      if (tempY < 0) return total\n      if (tempX > squares.length - 1) return total\n      if (tempY > squares.length - 1) return total\n    }\n\n    return total\n  }\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n      <div>\n        <div className=\"status\">{status}</div>\n          <div className=\"board-row\">\n            {squares.map((row, rowIndex) => row.map((column, colIndex) => <Square value={board.squares[colIndex][rowIndex]} handleClick={() => { handleClick(colIndex, rowIndex) }}/>))}\n          </div>\n        </div>\n      </div>\n    </div>\n\n  );\n}\n\nexport default Board","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}